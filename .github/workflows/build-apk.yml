name: Build Android APK

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      # Node setup for Capacitor
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '22'
          cache: 'npm'

      # Java setup for Gradle/Capacitor
      - name: Setup Java JDK
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'

      # Android SDK setup (explicit platforms and build-tools)
      - name: Setup Android SDK
        uses: android-actions/setup-android@v3
        with:
          api-level: 34
          build-tools: 34.0.0
          ndk: 25.2.9519653

      # Install project dependencies
      - name: Install dependencies
        run: npm ci

      # Build Vite React web assets
      - name: Build web app
        run: npm run build

      # Install Capacitor CLI
      - name: Install Capacitor CLI
        run: npm install -g @capacitor/cli

      # Add Android platform if missing
      - name: Initialize Capacitor (if needed)
        run: |
          if [ ! -d "android" ]; then
            npx cap add android
          fi
        continue-on-error: true

      # Sync Capacitor project
      - name: Sync Capacitor
        run: npx cap sync android

      # Build APK
      - name: Build APK
        run: |
          cd android
          chmod +x ./gradlew
          ./gradlew assembleDebug

      # Upload APK as artifact
      - name: Upload APK (artifact)
        uses: actions/upload-artifact@v4
        with:
          name: getlink-debug-apk
          path: android/app/build/outputs/apk/debug/app-debug.apk
          retention-days: 30

      # Create GitHub Release (main branch)
      - name: Create Release (on main branch)
        if: github.ref == 'refs/heads/main'
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.PAT_TOKEN }}
        with:
          tag_name: v${{ github.run_number }}
          release_name: GetLink v${{ github.run_number }}
          body: |
            Automated release of GetLink APK

            Download the APK from the assets below.
          draft: false
          prerelease: false

      # Upload release APK
      - name: Upload Release Asset
        if: github.ref == 'refs/heads/main'
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.PAT_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: android/app/build/outputs/apk/debug/app-debug.apk
          asset_name: GetLink-v${{ github.run_number }}.apk
          asset_content_type: application/vnd.android.package-archive
