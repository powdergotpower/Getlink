name: Build Android APK

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    # 1Ô∏è‚É£ Checkout code
    - name: Checkout repository
      uses: actions/checkout@v4

    # 2Ô∏è‚É£ Setup Node.js
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '22'
        cache: 'npm'

    # 3Ô∏è‚É£ Setup Java JDK (17 for Gradle/Capacitor)
    - name: Setup Java JDK
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'

    # 4Ô∏è‚É£ Setup Android SDK
    - name: Setup Android SDK
      uses: android-actions/setup-android@v3
      with:
        packages: |
          platforms;android-34
          build-tools;34.0.0
          platform-tools

    # 5Ô∏è‚É£ Install NPM dependencies
    - name: Install dependencies
      run: npm ci

    # 6Ô∏è‚É£ Build web assets
    - name: Build web app
      run: npm run build

    # 7Ô∏è‚É£ Install Capacitor CLI globally
    - name: Install Capacitor CLI
      run: npm install -g @capacitor/cli

    # 8Ô∏è‚É£ Initialize Capacitor Android (if not exists)
    - name: Initialize Capacitor Android
      run: |
        if [ ! -d "android" ]; then
          npx cap add android
        fi
      continue-on-error: true

    # 9Ô∏è‚É£ Sync Capacitor with native Android
    - name: Sync Capacitor
      run: npx cap sync android

    # üîü Build APK (Debug)
    - name: Build APK
      run: |
        cd android
        chmod +x ./gradlew
        ./gradlew clean
        ./gradlew assembleDebug --stacktrace --info --warning-mode all

    # 1Ô∏è‚É£1Ô∏è‚É£ Upload APK as artifact
    - name: Upload APK artifact
      uses: actions/upload-artifact@v4
      with:
        name: getlink-debug-apk
        path: android/app/build/outputs/apk/debug/app-debug.apk
        retention-days: 30

    # 1Ô∏è‚É£2Ô∏è‚É£ Create GitHub release (only on main branch)
    - name: Create Release
      if: github.ref == 'refs/heads/main'
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.PAT_TOKEN }}
      with:
        tag_name: v${{ github.run_number }}
        release_name: GetLink v${{ github.run_number }}
        body: |
          Automated release of GetLink APK
          
          Download the APK from the assets below.
        draft: false
        prerelease: false

    # 1Ô∏è‚É£3Ô∏è‚É£ Upload APK to release
    - name: Upload Release Asset
      if: github.ref == 'refs/heads/main'
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.PAT_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: android/app/build/outputs/apk/debug/app-debug.apk
        asset_name: GetLink-v${{ github.run_number }}.apk
        asset_content_type: application/vnd.android.package-archive
