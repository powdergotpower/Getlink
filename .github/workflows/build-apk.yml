name: Build Android APK

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4

    # ----------------------------
    # Setup Node.js (stable)
    # ----------------------------
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'

    # ----------------------------
    # Setup Java JDK
    # ----------------------------
    - name: Setup Java JDK
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'

    - name: Export JAVA_HOME
      run: echo "JAVA_HOME=$JAVA_HOME" >> $GITHUB_ENV

    # ----------------------------
    # Setup Android SDK (stable versions)
    # ----------------------------
    - name: Setup Android SDK
      uses: android-actions/setup-android@v3
      with:
        cmdline-tools-version: "9477386"
        accept-android-sdk-licenses: true
        packages: |
          platform-tools
          platforms;android-33
          build-tools;33.0.2

    # ----------------------------
    # Cache Gradle
    # ----------------------------
    - name: Cache Gradle packages
      uses: actions/cache@v3
      with:
        path: |
          ~/.gradle/caches
          ~/.gradle/wrapper
        key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
        restore-keys: |
          ${{ runner.os }}-gradle-

    # ----------------------------
    # Install NPM dependencies
    # ----------------------------
    - name: Install dependencies
      run: npm ci

    # ----------------------------
    # Build web app
    # ----------------------------
    - name: Build web app
      run: npm run build

    - name: Verify dist folder
      run: ls -la dist/

    # ----------------------------
    # Add Android platform (clean)
    # ----------------------------
    - name: Add Android platform
      run: |
        if [ -d "android" ]; then
          rm -rf android
        fi
        npx cap add android

    # ----------------------------
    # Configure Gradle JVM
    # ----------------------------
    - name: Configure Gradle JVM
      run: |
        mkdir -p android
        echo "org.gradle.java.home=$JAVA_HOME" >> android/gradle.properties
        echo "org.gradle.jvmargs=-Xmx4g -XX:MaxMetaspaceSize=512m" >> android/gradle.properties

    # ----------------------------
    # Fix Android Gradle config (Java 17)
    # ----------------------------
    - name: Fix Android Gradle config
      run: |
        cat >> android/app/build.gradle << 'EOF'
        android {
            compileOptions {
                sourceCompatibility JavaVersion.VERSION_17
                targetCompatibility JavaVersion.VERSION_17
            }
            kotlinOptions {
                jvmTarget = "17"
            }
        }
        EOF

    # ----------------------------
    # Sync Capacitor
    # ----------------------------
    - name: Sync Capacitor
      run: npx cap sync android

    # ----------------------------
    # Make Gradlew executable
    # ----------------------------
    - name: Make Gradlew executable
      run: chmod +x android/gradlew

    # ----------------------------
    # Build APK with detailed logging
    # ----------------------------
    - name: Build APK
      run: |
        cd android
        ./gradlew assembleDebug --stacktrace --info

    # ----------------------------
    # Verify APK exists
    # ----------------------------
    - name: Verify APK exists
      run: |
        if [ ! -f "android/app/build/outputs/apk/debug/app-debug.apk" ]; then
          echo "APK not found!"
          exit 1
        fi
        ls -la android/app/build/outputs/apk/debug/

    # ----------------------------
    # Upload APK artifact
    # ----------------------------
    - name: Upload APK artifact
      uses: actions/upload-artifact@v4
      with:
        name: getlink-debug-apk-${{ github.run_number }}
        path: android/app/build/outputs/apk/debug/app-debug.apk
        retention-days: 30

    # ----------------------------
    # Create GitHub Release
    # ----------------------------
    - name: Create Release
      if: github.ref == 'refs/heads/main'
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.PAT_TOKEN }}
      with:
        tag_name: v${{ github.run_number }}
        release_name: GetLink v${{ github.run_number }}
        body: |
          ðŸš€ Automated release of GetLink APK
          ðŸ“± Download the APK from assets below.
        draft: false
        prerelease: false

    # ----------------------------
    # Upload Release Asset
    # ----------------------------
    - name: Upload Release Asset
      if: github.ref == 'refs/heads/main'
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.PAT_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: android/app/build/outputs/apk/debug/app-debug.apk
        asset_name: GetLink-v${{ github.run_number }}.apk
        asset_content_type: application/vnd.android.package-archive
